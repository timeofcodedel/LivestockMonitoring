import {  Body,  Controller,  Get,  HttpStatus,  Logger,  Post,} from '@nestjs/common';import { AnimalManagerService } from './animalManager.service';import { RegisterAnimalDto } from './Dto/registerAnimal.dto';import { GetUser } from '../utils/GetUserDecorator';import { UpdateAnimalDto } from './Dto/updateAnimal.dto';import { DeleteAnimalDto } from './Dto/deletAnimal,dto';@Controller('animal')export class AnimalManagerController {  private readonly logger = new Logger();  constructor(private readonly animalService: AnimalManagerService) {}  @Post('register')  async register(    @Body() registerDto: RegisterAnimalDto,    @GetUser() user: object,  ) {    await this.animalService.registerAnimal(user['sub'], registerDto);    return {      statusCode: HttpStatus.OK,      message: 'successful!',    };  }  @Get('animals')  async getAllAnimals(@GetUser() user: object) {    return {      statusCode: HttpStatus.OK,      message: await this.animalService.getAnimals(user['sub']),    };  }  @Post('update')  async updateAnimalDataField(    @Body() updateAnimalDto: UpdateAnimalDto,    @GetUser() user: object,  ) {    const updateFlag: boolean = await this.animalService.updateAnimalDataField(      user['sub'],      updateAnimalDto,    );    if (updateFlag)      return {        statusCode: HttpStatus.OK,        message: 'successful!',      };    else      return {        statusCode: HttpStatus.NOT_FOUND,        message: 'failed!',      };  }  @Post('delete')  async deleteAnimal(    @Body() deleteAnimalDto: DeleteAnimalDto,    @GetUser() user: object,  ) {    const _delFlag: boolean = await this.animalService.deleteAnimal(      user['sub'],      deleteAnimalDto,    );    if (_delFlag)      return {        statusCode: HttpStatus.OK,        message: 'successful!',      };    else      return {        statusCode: HttpStatus.NOT_FOUND,        message: 'failed!',      };  }}